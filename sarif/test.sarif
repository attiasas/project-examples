{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://docs.jfrog-applications.jfrog.io/jfrog-security-features/sca",
          "name": "JFrog Xray Scanner",
          "rules": [
            {
              "id": "CVE-2022-42004_com.fasterxml.jackson.core:jackson-databind_2.10.5",
              "shortDescription": {
                "text": "[CVE-2022-42004] com.fasterxml.jackson.core:jackson-databind 2.10.5"
              },
              "help": {
                "text": "In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.fasterxml.jackson.core:jackson-databind 2.10.5`       | [2.12.7.1], [2.13.4]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-36518_com.fasterxml.jackson.core:jackson-databind_2.10.5",
              "shortDescription": {
                "text": "[CVE-2020-36518] com.fasterxml.jackson.core:jackson-databind 2.10.5"
              },
              "help": {
                "text": "jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.fasterxml.jackson.core:jackson-databind 2.10.5`       | [2.12.6.1], [2.13.2.1]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39149_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39149] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2020-26217_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2020-26217] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream before version 1.4.14 is vulnerable to Remote Code Execution.The vulnerability may allow a remote attacker to run arbitrary shell commands only by manipulating the processed input stream. Only users who rely on blocklists are affected. Anyone using XStream's Security Framework allowlist is not affected. The linked advisory provides code workarounds for users who cannot upgrade. The issue is fixed in version 1.4.14.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.14-jdk7]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2020-26258_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2020-26258] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.15, a Server-Side Forgery Request vulnerability can be activated when unmarshalling. The vulnerability may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.15. The reported vulnerability does not exist if running Java 15 or higher. No user is affected who followed the recommendation to setup XStream's Security Framework with a whitelist! Anyone relying on XStream's default blacklist can immediately switch to a whilelist for the allowed types to avoid the vulnerability. Users of XStream 1.4.14 or below who still want to use XStream default blacklist can use a workaround described in more detailed in the referenced advisories.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.7      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.15]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.7"
              }
            },
            {
              "id": "XRAY-125253_commons-io:commons-io_2.7",
              "shortDescription": {
                "text": "[XRAY-125253] commons-io:commons-io 2.7"
              },
              "help": {
                "text": "InfiniteCircularInputStream throws a divide-by-zero exception when reading if its input buffer is size 0",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.9      | `commons-io:commons-io 2.7`       | [2.8.0-RC1]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.9"
              }
            },
            {
              "id": "CVE-2021-39141_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39141] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2021-29505_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-29505] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is software for serializing Java objects to XML and back again. A vulnerability in XStream versions prior to 1.4.17 may allow a remote attacker has sufficient rights to execute commands of the host only by manipulating the processed input stream. No user who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types is affected. The vulnerability is patched in version 1.4.17.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.17]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-39147_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39147] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2022-40151_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2022-40151] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "Those using Xstream to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.20]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-46877_com.fasterxml.jackson.core:jackson-databind_2.10.5",
              "shortDescription": {
                "text": "[CVE-2021-46877] com.fasterxml.jackson.core:jackson-databind 2.10.5"
              },
              "help": {
                "text": "jackson-databind 2.10.x through 2.12.x before 2.12.6 and 2.13.x before 2.13.1 allows attackers to cause a denial of service (2 GB transient heap usage per read) in uncommon situations involving JsonNode JDK serialization.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.fasterxml.jackson.core:jackson-databind 2.10.5`       | [2.12.6], [2.13.1]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2022-42003_com.fasterxml.jackson.core:jackson-databind_2.10.5",
              "shortDescription": {
                "text": "[CVE-2022-42003] com.fasterxml.jackson.core:jackson-databind 2.10.5"
              },
              "help": {
                "text": "In FasterXML jackson-databind before versions 2.13.4.1 and 2.12.17.1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.fasterxml.jackson.core:jackson-databind 2.10.5`       | [2.12.7.1], [2.13.4.1], [2.14.0]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39148_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39148] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2021-39150_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39150] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream with a Java runtime version 14 to 8. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the [Security Framework](https://x-stream.github.io/security.html#framework), you will have to use at least version 1.4.18.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2021-21350_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21350] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to execute arbitrary code only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-21346_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21346] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2024-47554_commons-io:commons-io_2.7",
              "shortDescription": {
                "text": "[CVE-2024-47554] commons-io:commons-io 2.7"
              },
              "help": {
                "text": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe org.apache.commons.io.input.XmlStreamReader class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `commons-io:commons-io 2.7`       | [2.14.0]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-21342_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21342] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability where the processed stream at unmarshalling time contains type information to recreate the formerly written objects. XStream creates therefore new instances based on these type information. An attacker can manipulate the processed input stream and replace or inject objects, that result in a server-side forgery request. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2021-43859_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-43859] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is an open source java library to serialize objects to XML and back again. Versions prior to 1.4.19 may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream. XStream 1.4.19 monitors and accumulates the time it takes to add elements to collections and throws an exception if a set threshold is exceeded. Users are advised to upgrade as soon as possible. Users unable to upgrade may set the NO_REFERENCE mode to prevent recursion. See GHSA-rmr5-cpv2-vgjf for further details on a workaround if an upgrade is not possible.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.19]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39153_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39153] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream, if using the version out of the box with Java runtime version 14 to 8 or with JavaFX installed. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2021-21341_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21341] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is vulnerability which may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream. No user is affected who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39144_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39144] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker has sufficient rights to execute commands of the host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2021-39140_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39140] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.3      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "6.3"
              }
            },
            {
              "id": "CVE-2021-39152_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39152] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream with a Java runtime version 14 to 8. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the [Security Framework](https://x-stream.github.io/security.html#framework), you will have to use at least version 1.4.18.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2021-36090_org.apache.commons:commons-compress_1.19",
              "shortDescription": {
                "text": "[CVE-2021-36090] org.apache.commons:commons-compress 1.19"
              },
              "help": {
                "text": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `org.apache.commons:commons-compress 1.19`       | [1.21]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-26259_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2020-26259] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.15, is vulnerable to an Arbitrary File Deletion on the local host when unmarshalling. The vulnerability may allow a remote attacker to delete arbitrary know files on the host as log as the executing process has sufficient rights only by manipulating the processed input stream. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.15. The reported vulnerability does not exist running Java 15 or higher. No user is affected, who followed the recommendation to setup XStream's Security Framework with a whitelist! Anyone relying on XStream's default blacklist can immediately switch to a whilelist for the allowed types to avoid the vulnerability. Users of XStream 1.4.14 or below who still want to use XStream default blacklist can use a workaround described in more detailed in the referenced advisories.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 6.8      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.15]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "6.8"
              }
            },
            {
              "id": "CVE-2021-39151_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39151] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2021-21349_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21349] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.6      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.6"
              }
            },
            {
              "id": "CVE-2021-35517_org.apache.commons:commons-compress_1.19",
              "shortDescription": {
                "text": "[CVE-2021-35517] org.apache.commons:commons-compress 1.19"
              },
              "help": {
                "text": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `org.apache.commons:commons-compress 1.19`       | [1.21]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-39154_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39154] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2021-21344_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21344] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2021-21343_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21343] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability where the processed stream at unmarshalling time contains type information to recreate the formerly written objects. XStream creates therefore new instances based on these type information. An attacker can manipulate the processed input stream and replace or inject objects, that result in the deletion of a file on the local host. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-21347_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21347] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.8      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "9.8"
              }
            },
            {
              "id": "CVE-2022-41966_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2022-41966] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream serializes Java objects to XML and back again. Versions prior to 1.4.20 may allow a remote attacker to terminate the application with a stack overflow error, resulting in a denial of service only via manipulation the processed input stream. The attack uses the hash code implementation for collections and maps to force recursive hash calculation causing a stack overflow. This issue is patched in version 1.4.20 which handles the stack overflow and raises an InputManipulationException instead. A potential workaround for users who only use HashMap or HashSet and whose XML refers these only as default map or set, is to change the default implementation of java.util.Map and java.util per the code example in the referenced advisory. However, this implies that your application does not care about the implementation of the map and all elements are comparable.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.20]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2023-2976_com.google.guava:guava_27.0.1-jre",
              "shortDescription": {
                "text": "[CVE-2023-2976] com.google.guava:guava 27.0.1-jre"
              },
              "help": {
                "text": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.1      | `com.google.guava:guava 27.0.1-jre`       | [32.0.0-android], [32.0.1-jre]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.1"
              }
            },
            {
              "id": "CVE-2021-39139_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39139] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. A user is only affected if using the version out of the box with JDK 1.7u21 or below. However, this scenario can be adjusted easily to an external Xalan that works regardless of the version of the Java runtime. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.8      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.8"
              }
            },
            {
              "id": "CVE-2021-39145_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39145] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2021-35515_org.apache.commons:commons-compress_1.19",
              "shortDescription": {
                "text": "[CVE-2021-35515] org.apache.commons:commons-compress 1.19"
              },
              "help": {
                "text": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `org.apache.commons:commons-compress 1.19`       | [1.21]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-35516_org.apache.commons:commons-compress_1.19",
              "shortDescription": {
                "text": "[CVE-2021-35516] org.apache.commons:commons-compress 1.19"
              },
              "help": {
                "text": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `org.apache.commons:commons-compress 1.19`       | [1.21]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-25649_com.fasterxml.jackson.core:jackson-databind_2.10.5",
              "shortDescription": {
                "text": "[CVE-2020-25649] com.fasterxml.jackson.core:jackson-databind 2.10.5"
              },
              "help": {
                "text": "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.fasterxml.jackson.core:jackson-databind 2.10.5`       | [2.10.5.1], [2.6.7.4], [2.9.10.7]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2020-13956_org.apache.httpcomponents:httpclient_4.5.12",
              "shortDescription": {
                "text": "[CVE-2020-13956] org.apache.httpcomponents:httpclient 4.5.12"
              },
              "help": {
                "text": "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.3      | `org.apache.httpcomponents:httpclient 4.5.12`       | [4.5.13], [5.0.3]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "5.3"
              }
            },
            {
              "id": "CVE-2024-47072_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2024-47072] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. This vulnerability may allow a remote attacker to terminate the application with a stack overflow error resulting in a denial of service only by manipulating the processed input stream when XStream is configured to use the BinaryStreamDriver. XStream 1.4.21 has been patched to detect the manipulation in the binary input stream causing the the stack overflow and raises an InputManipulationException instead. Users are advised to upgrade. Users unable to upgrade may catch the StackOverflowError in the client code calling XStream if XStream is configured to use the BinaryStreamDriver.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.21]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            },
            {
              "id": "CVE-2021-21345_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21345] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker who has sufficient rights to execute commands of the host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.9      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "9.9"
              }
            },
            {
              "id": "CVE-2021-39146_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-39146] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 8.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.18]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "8.5"
              }
            },
            {
              "id": "CVE-2024-25710_org.apache.commons:commons-compress_1.19",
              "shortDescription": {
                "text": "[CVE-2024-25710] org.apache.commons:commons-compress 1.19"
              },
              "help": {
                "text": "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.3 through 1.25.0.\n\nUsers are recommended to upgrade to version 1.26.0 which fixes the issue.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 5.5      | `org.apache.commons:commons-compress 1.19`       | [1.26.0]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "5.5"
              }
            },
            {
              "id": "CVE-2023-35116_com.fasterxml.jackson.core:jackson-databind_2.10.5",
              "shortDescription": {
                "text": "[CVE-2023-35116] com.fasterxml.jackson.core:jackson-databind 2.10.5"
              },
              "help": {
                "text": "jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 4.7      | `com.fasterxml.jackson.core:jackson-databind 2.10.5`       | No fix available   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "4.7"
              }
            },
            {
              "id": "CVE-2020-8908_com.google.guava:guava_27.0.1-jre",
              "shortDescription": {
                "text": "[CVE-2020-8908] com.google.guava:guava 27.0.1-jre"
              },
              "help": {
                "text": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 3.3      | `com.google.guava:guava 27.0.1-jre`       | [32.0.0-android]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "3.3"
              }
            },
            {
              "id": "CVE-2021-21351_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21351] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 9.1      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "9.1"
              }
            },
            {
              "id": "CVE-2021-21348_com.thoughtworks.xstream:xstream_1.4.11.1",
              "shortDescription": {
                "text": "[CVE-2021-21348] com.thoughtworks.xstream:xstream 1.4.11.1"
              },
              "help": {
                "text": "XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to occupy a thread that consumes maximum CPU time and will never return. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.",
                "markdown": "| Severity Score | Direct Dependencies | Fixed Versions     |\n| :---:        |    :----:   |          :---: |\n| 7.5      | `com.thoughtworks.xstream:xstream 1.4.11.1`       | [1.4.16]   |\n\n![](https://tokyoshiftleft.jfrog.io/ui/api/v1/u?s=1&m=2&job_id=teast&run_id=12504538887&git_repo=attiasas/project-examples&type=sca)"
              },
              "properties": {
                "security-severity": "7.5"
              }
            }
          ],
          "version": "3.108.7"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "workingDirectory": {
            "uri": "binaries"
          }
        }
      ],
      "results": [
        {
          "properties": {
            "fixedVersion": "[32.0.0-android], [32.0.1-jre]"
          },
          "ruleId": "CVE-2023-2976_com.google.guava:guava_27.0.1-jre",
          "ruleIndex": 34,
          "level": "note",
          "message": {
            "text": "[CVE-2023-2976] com.google.guava:guava 27.0.1-jre",
            "markdown": "[CVE-2023-2976] com.google.guava:guava 27.0.1-jre\nGithub Actions Workflow: .github/workflows/test-binary.yml\nRun: 6"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "META-INF/maven/com.google.guava/guava/pom.xml"
                }
              }
            }
          ],
          "fingerprints": {
            "jfrogFingerprintHash": "8ffa2a62a5a758a37a42a4cd16f8f43a"
          }
        },
        {
          "properties": {
            "fixedVersion": "[32.0.0-android]"
          },
          "ruleId": "CVE-2020-8908_com.google.guava:guava_27.0.1-jre",
          "ruleIndex": 46,
          "level": "note",
          "message": {
            "text": "[CVE-2020-8908] com.google.guava:guava 27.0.1-jre",
            "markdown": "[CVE-2020-8908] com.google.guava:guava 27.0.1-jre\nGithub Actions Workflow: .github/workflows/test-binary.yml\nRun: 6"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "META-INF/maven/com.google.guava/guava/pom.xml"
                }
              }
            }
          ],
          "fingerprints": {
            "jfrogFingerprintHash": "874270ee5bb090d1c8b9cbb46144ba41"
          }
        }
      ]
    }
  ]
}